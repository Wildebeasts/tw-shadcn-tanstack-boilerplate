steps:
  - name: Building FE
    image: bash
    commands:
      - curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
      - export NVM_DIR="$HOME/.nvm" # Or wherever nvm is installed
      - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"' # This loads nvm
      - '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"' # This loads nvm bash_completion
      - nvm install node # Installs the latest version of Node.js
      - nvm use node
      - node -v
      - npm -v
      - corepack enable pnpm
      - pnpm install
      - pnpm add @mantine/core
      - pnpm add uuid
      - pnpm build
      - ls
  - name: Deploy FE
    image: bash # Using the official bash Docker image
    environment:
      # Make Woodpecker secrets available as environment variables in this step
      SSH_PRIVATE_KEY: $$SSH_KEY 
      REMOTE_HOST: 192.168.2.245
      REMOTE_USER: root
      REMOTE_TARGET_PATH: /root # e.g., /var/www/myapp
      DEPLOY_COMMAND: "cd /root/Bean-Journal-Web-FE && npm install -g pm2 && pm2 delete BJ_FE || true && pm2 start serve --name BJ_FE -- -s ./Bean-Journal-Web-FE/dist/ -l 3000" # Your actual deploy command
    commands:
      - sudo apt-get update -y && sudo apt-get install -y openssh-client rsync
      - mkdir -p ~/.ssh
      - echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa_deploy
      - chmod 600 ~/.ssh/id_rsa_deploy
      

      - scp -i ~/.ssh/id_rsa_deploy -o StrictHostKeyChecking=no -r ./dist ${REMOTE_USER}@${REMOTE_HOST}:${REMOTE_TARGET_PATH}
      
      - ssh -i ~/.ssh/id_rsa_deploy -o StrictHostKeyChecking=no ${REMOTE_USER}@${REMOTE_HOST} "${DEPLOY_COMMAND}"
      
      - rm -f ~/.ssh/id_rsa_deploy
