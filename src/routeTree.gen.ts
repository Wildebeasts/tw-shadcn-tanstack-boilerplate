/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ThemeShopImport } from './routes/theme-shop'
import { Route as SignUpImport } from './routes/sign-up'
import { Route as SignInImport } from './routes/sign-in'
import { Route as PricingImport } from './routes/pricing'
import { Route as JournalImport } from './routes/journal'
import { Route as R404Import } from './routes/__404'
import { Route as IndexImport } from './routes/index'
import { Route as JournalIndexImport } from './routes/journal/index'
import { Route as SignUpContinueImport } from './routes/sign-up/continue'
import { Route as SignInSsoCallbackImport } from './routes/sign-in/sso-callback'
import { Route as JournalUserProfileImport } from './routes/journal/user-profile'
import { Route as JournalTodoImport } from './routes/journal/todo'
import { Route as JournalDiaryImport } from './routes/journal/diary'
import { Route as JournalDashboardImport } from './routes/journal/dashboard'
import { Route as JournalBeanJourneyImport } from './routes/journal/bean-journey'

// Create/Update Routes

const ThemeShopRoute = ThemeShopImport.update({
  id: '/theme-shop',
  path: '/theme-shop',
  getParentRoute: () => rootRoute,
} as any)

const SignUpRoute = SignUpImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const PricingRoute = PricingImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRoute,
} as any)

const JournalRoute = JournalImport.update({
  id: '/journal',
  path: '/journal',
  getParentRoute: () => rootRoute,
} as any)

const R404Route = R404Import.update({
  id: '/__404',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const JournalIndexRoute = JournalIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => JournalRoute,
} as any)

const SignUpContinueRoute = SignUpContinueImport.update({
  id: '/continue',
  path: '/continue',
  getParentRoute: () => SignUpRoute,
} as any)

const SignInSsoCallbackRoute = SignInSsoCallbackImport.update({
  id: '/sso-callback',
  path: '/sso-callback',
  getParentRoute: () => SignInRoute,
} as any)

const JournalUserProfileRoute = JournalUserProfileImport.update({
  id: '/user-profile',
  path: '/user-profile',
  getParentRoute: () => JournalRoute,
} as any)

const JournalTodoRoute = JournalTodoImport.update({
  id: '/todo',
  path: '/todo',
  getParentRoute: () => JournalRoute,
} as any)

const JournalDiaryRoute = JournalDiaryImport.update({
  id: '/diary',
  path: '/diary',
  getParentRoute: () => JournalRoute,
} as any)

const JournalDashboardRoute = JournalDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => JournalRoute,
} as any)

const JournalBeanJourneyRoute = JournalBeanJourneyImport.update({
  id: '/bean-journey',
  path: '/bean-journey',
  getParentRoute: () => JournalRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/__404': {
      id: '/__404'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof R404Import
      parentRoute: typeof rootRoute
    }
    '/journal': {
      id: '/journal'
      path: '/journal'
      fullPath: '/journal'
      preLoaderRoute: typeof JournalImport
      parentRoute: typeof rootRoute
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpImport
      parentRoute: typeof rootRoute
    }
    '/theme-shop': {
      id: '/theme-shop'
      path: '/theme-shop'
      fullPath: '/theme-shop'
      preLoaderRoute: typeof ThemeShopImport
      parentRoute: typeof rootRoute
    }
    '/journal/bean-journey': {
      id: '/journal/bean-journey'
      path: '/bean-journey'
      fullPath: '/journal/bean-journey'
      preLoaderRoute: typeof JournalBeanJourneyImport
      parentRoute: typeof JournalImport
    }
    '/journal/dashboard': {
      id: '/journal/dashboard'
      path: '/dashboard'
      fullPath: '/journal/dashboard'
      preLoaderRoute: typeof JournalDashboardImport
      parentRoute: typeof JournalImport
    }
    '/journal/diary': {
      id: '/journal/diary'
      path: '/diary'
      fullPath: '/journal/diary'
      preLoaderRoute: typeof JournalDiaryImport
      parentRoute: typeof JournalImport
    }
    '/journal/todo': {
      id: '/journal/todo'
      path: '/todo'
      fullPath: '/journal/todo'
      preLoaderRoute: typeof JournalTodoImport
      parentRoute: typeof JournalImport
    }
    '/journal/user-profile': {
      id: '/journal/user-profile'
      path: '/user-profile'
      fullPath: '/journal/user-profile'
      preLoaderRoute: typeof JournalUserProfileImport
      parentRoute: typeof JournalImport
    }
    '/sign-in/sso-callback': {
      id: '/sign-in/sso-callback'
      path: '/sso-callback'
      fullPath: '/sign-in/sso-callback'
      preLoaderRoute: typeof SignInSsoCallbackImport
      parentRoute: typeof SignInImport
    }
    '/sign-up/continue': {
      id: '/sign-up/continue'
      path: '/continue'
      fullPath: '/sign-up/continue'
      preLoaderRoute: typeof SignUpContinueImport
      parentRoute: typeof SignUpImport
    }
    '/journal/': {
      id: '/journal/'
      path: '/'
      fullPath: '/journal/'
      preLoaderRoute: typeof JournalIndexImport
      parentRoute: typeof JournalImport
    }
  }
}

// Create and export the route tree

interface JournalRouteChildren {
  JournalBeanJourneyRoute: typeof JournalBeanJourneyRoute
  JournalDashboardRoute: typeof JournalDashboardRoute
  JournalDiaryRoute: typeof JournalDiaryRoute
  JournalTodoRoute: typeof JournalTodoRoute
  JournalUserProfileRoute: typeof JournalUserProfileRoute
  JournalIndexRoute: typeof JournalIndexRoute
}

const JournalRouteChildren: JournalRouteChildren = {
  JournalBeanJourneyRoute: JournalBeanJourneyRoute,
  JournalDashboardRoute: JournalDashboardRoute,
  JournalDiaryRoute: JournalDiaryRoute,
  JournalTodoRoute: JournalTodoRoute,
  JournalUserProfileRoute: JournalUserProfileRoute,
  JournalIndexRoute: JournalIndexRoute,
}

const JournalRouteWithChildren =
  JournalRoute._addFileChildren(JournalRouteChildren)

interface SignInRouteChildren {
  SignInSsoCallbackRoute: typeof SignInSsoCallbackRoute
}

const SignInRouteChildren: SignInRouteChildren = {
  SignInSsoCallbackRoute: SignInSsoCallbackRoute,
}

const SignInRouteWithChildren =
  SignInRoute._addFileChildren(SignInRouteChildren)

interface SignUpRouteChildren {
  SignUpContinueRoute: typeof SignUpContinueRoute
}

const SignUpRouteChildren: SignUpRouteChildren = {
  SignUpContinueRoute: SignUpContinueRoute,
}

const SignUpRouteWithChildren =
  SignUpRoute._addFileChildren(SignUpRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof R404Route
  '/journal': typeof JournalRouteWithChildren
  '/pricing': typeof PricingRoute
  '/sign-in': typeof SignInRouteWithChildren
  '/sign-up': typeof SignUpRouteWithChildren
  '/theme-shop': typeof ThemeShopRoute
  '/journal/bean-journey': typeof JournalBeanJourneyRoute
  '/journal/dashboard': typeof JournalDashboardRoute
  '/journal/diary': typeof JournalDiaryRoute
  '/journal/todo': typeof JournalTodoRoute
  '/journal/user-profile': typeof JournalUserProfileRoute
  '/sign-in/sso-callback': typeof SignInSsoCallbackRoute
  '/sign-up/continue': typeof SignUpContinueRoute
  '/journal/': typeof JournalIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof R404Route
  '/pricing': typeof PricingRoute
  '/sign-in': typeof SignInRouteWithChildren
  '/sign-up': typeof SignUpRouteWithChildren
  '/theme-shop': typeof ThemeShopRoute
  '/journal/bean-journey': typeof JournalBeanJourneyRoute
  '/journal/dashboard': typeof JournalDashboardRoute
  '/journal/diary': typeof JournalDiaryRoute
  '/journal/todo': typeof JournalTodoRoute
  '/journal/user-profile': typeof JournalUserProfileRoute
  '/sign-in/sso-callback': typeof SignInSsoCallbackRoute
  '/sign-up/continue': typeof SignUpContinueRoute
  '/journal': typeof JournalIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/__404': typeof R404Route
  '/journal': typeof JournalRouteWithChildren
  '/pricing': typeof PricingRoute
  '/sign-in': typeof SignInRouteWithChildren
  '/sign-up': typeof SignUpRouteWithChildren
  '/theme-shop': typeof ThemeShopRoute
  '/journal/bean-journey': typeof JournalBeanJourneyRoute
  '/journal/dashboard': typeof JournalDashboardRoute
  '/journal/diary': typeof JournalDiaryRoute
  '/journal/todo': typeof JournalTodoRoute
  '/journal/user-profile': typeof JournalUserProfileRoute
  '/sign-in/sso-callback': typeof SignInSsoCallbackRoute
  '/sign-up/continue': typeof SignUpContinueRoute
  '/journal/': typeof JournalIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/journal'
    | '/pricing'
    | '/sign-in'
    | '/sign-up'
    | '/theme-shop'
    | '/journal/bean-journey'
    | '/journal/dashboard'
    | '/journal/diary'
    | '/journal/todo'
    | '/journal/user-profile'
    | '/sign-in/sso-callback'
    | '/sign-up/continue'
    | '/journal/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/pricing'
    | '/sign-in'
    | '/sign-up'
    | '/theme-shop'
    | '/journal/bean-journey'
    | '/journal/dashboard'
    | '/journal/diary'
    | '/journal/todo'
    | '/journal/user-profile'
    | '/sign-in/sso-callback'
    | '/sign-up/continue'
    | '/journal'
  id:
    | '__root__'
    | '/'
    | '/__404'
    | '/journal'
    | '/pricing'
    | '/sign-in'
    | '/sign-up'
    | '/theme-shop'
    | '/journal/bean-journey'
    | '/journal/dashboard'
    | '/journal/diary'
    | '/journal/todo'
    | '/journal/user-profile'
    | '/sign-in/sso-callback'
    | '/sign-up/continue'
    | '/journal/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  R404Route: typeof R404Route
  JournalRoute: typeof JournalRouteWithChildren
  PricingRoute: typeof PricingRoute
  SignInRoute: typeof SignInRouteWithChildren
  SignUpRoute: typeof SignUpRouteWithChildren
  ThemeShopRoute: typeof ThemeShopRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  R404Route: R404Route,
  JournalRoute: JournalRouteWithChildren,
  PricingRoute: PricingRoute,
  SignInRoute: SignInRouteWithChildren,
  SignUpRoute: SignUpRouteWithChildren,
  ThemeShopRoute: ThemeShopRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/__404",
        "/journal",
        "/pricing",
        "/sign-in",
        "/sign-up",
        "/theme-shop"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/__404": {
      "filePath": "__404.tsx"
    },
    "/journal": {
      "filePath": "journal.tsx",
      "children": [
        "/journal/bean-journey",
        "/journal/dashboard",
        "/journal/diary",
        "/journal/todo",
        "/journal/user-profile",
        "/journal/"
      ]
    },
    "/pricing": {
      "filePath": "pricing.tsx"
    },
    "/sign-in": {
      "filePath": "sign-in.tsx",
      "children": [
        "/sign-in/sso-callback"
      ]
    },
    "/sign-up": {
      "filePath": "sign-up.tsx",
      "children": [
        "/sign-up/continue"
      ]
    },
    "/theme-shop": {
      "filePath": "theme-shop.tsx"
    },
    "/journal/bean-journey": {
      "filePath": "journal/bean-journey.tsx",
      "parent": "/journal"
    },
    "/journal/dashboard": {
      "filePath": "journal/dashboard.tsx",
      "parent": "/journal"
    },
    "/journal/diary": {
      "filePath": "journal/diary.tsx",
      "parent": "/journal"
    },
    "/journal/todo": {
      "filePath": "journal/todo.tsx",
      "parent": "/journal"
    },
    "/journal/user-profile": {
      "filePath": "journal/user-profile.tsx",
      "parent": "/journal"
    },
    "/sign-in/sso-callback": {
      "filePath": "sign-in/sso-callback.tsx",
      "parent": "/sign-in"
    },
    "/sign-up/continue": {
      "filePath": "sign-up/continue.tsx",
      "parent": "/sign-up"
    },
    "/journal/": {
      "filePath": "journal/index.tsx",
      "parent": "/journal"
    }
  }
}
ROUTE_MANIFEST_END */
